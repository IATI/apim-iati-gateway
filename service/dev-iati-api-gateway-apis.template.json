{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "ApimServiceName": {
      "type": "string"
    },
    "PolicyXMLBaseUrl": {
      "type": "string"
    },
    "serviceUrl": {
      "type": "object"
    },
    "ApiLoggerId": {
      "type": "object"
    }
  },
  "resources": [
    {
      "properties": {
        "description": "Import from \"dev-func-iati-validator\" Function App",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": false,
        "displayName": "IATI Validator Private",
        "serviceUrl": "[parameters('serviceUrl').iativalidatorprivate]",
        "path": "pvt/validator",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/iati-validator-private')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": []
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "pvt-get",
        "method": "GET",
        "urlTemplate": "/pvt"
      },
      "name": "[concat(parameters('ApimServiceName'), '/iati-validator-private/get-pvt-get')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'iati-validator-private')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/iati-validator-private-get-pvt-get-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/iati-validator-private/get-pvt-get/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'iati-validator-private', 'get-pvt-get')]"
      ]
    },
    {
      "name": "[concat(parameters('ApimServiceName'), '/private-routes/iati-validator-private')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'iati-validator-private')]"
      ]
    },
    {
      "properties": {
        "description": "Public API to Validate IATI XML",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": true,
        "displayName": "IATI Validator V2",
        "serviceUrl": "[parameters('serviceUrl').iativalidatorv2]",
        "path": "validator",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/iati-validator-v2')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": []
    },
    {
      "properties": {
        "contentType": "application/vnd.oai.openapi.components+json",
        "document": {
          "components": {
            "schemas": {
              "Malformed Body Error": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string"
                  }
                }
              },
              "No Body Error": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string"
                  }
                }
              },
              "Invalid XML Error": {
                "type": "object",
                "properties": {
                  "valid": {
                    "type": "boolean"
                  },
                  "fileType": {
                    "type": "string"
                  },
                  "iatiVersion": {
                    "type": "string"
                  },
                  "summary": {
                    "type": "object",
                    "properties": {
                      "critical": {
                        "type": "integer"
                      },
                      "error": {
                        "type": "integer"
                      },
                      "warning": {
                        "type": "integer"
                      }
                    }
                  },
                  "errors": {
                    "type": "object",
                    "properties": {
                      "file": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "severity": {
                              "type": "string"
                            },
                            "category": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "severity",
                            "category",
                            "message"
                          ]
                        }
                      }
                    }
                  }
                },
                "example": {
                  "valid": false,
                  "fileType": "string",
                  "iatiVersion": "string",
                  "summary": {
                    "critical": 0,
                    "error": 0,
                    "warning": 0
                  },
                  "errors": {
                    "file": [
                      {
                        "id": "string",
                        "severity": "string",
                        "category": "string",
                        "message": "string"
                      }
                    ]
                  }
                }
              },
              "Schema Error": {
                "type": "object",
                "properties": {
                  "valid": {
                    "type": "boolean"
                  },
                  "fileType": {
                    "type": "string"
                  },
                  "iatiVersion": {
                    "type": "string"
                  },
                  "summary": {
                    "type": "object",
                    "properties": {
                      "critical": {
                        "type": "integer"
                      },
                      "error": {
                        "type": "integer"
                      },
                      "warning": {
                        "type": "integer"
                      }
                    }
                  },
                  "errors": {
                    "type": "object",
                    "properties": {
                      "file": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "category": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            },
                            "domain": {
                              "type": "integer"
                            },
                            "code": {
                              "type": "integer"
                            },
                            "level": {
                              "type": "integer"
                            },
                            "column": {
                              "type": "integer"
                            },
                            "line": {
                              "type": "integer"
                            },
                            "str1": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "category",
                            "message",
                            "domain",
                            "code",
                            "level",
                            "column",
                            "line",
                            "str1"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "Valid XML but Not IATI": {
                "type": "object",
                "properties": {
                  "valid": {
                    "type": "boolean"
                  },
                  "fileType": {
                    "type": "string"
                  },
                  "iatiVersion": {
                    "type": "string"
                  },
                  "summary": {
                    "type": "object",
                    "properties": {
                      "critical": {
                        "type": "integer"
                      },
                      "error": {
                        "type": "integer"
                      },
                      "warning": {
                        "type": "integer"
                      }
                    }
                  },
                  "errors": {
                    "type": "object",
                    "properties": {
                      "file": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "severity": {
                              "type": "string"
                            },
                            "category": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "severity",
                            "category",
                            "message"
                          ]
                        }
                      }
                    }
                  }
                }
              },
              "Unsupported IATI Version": {
                "type": "object",
                "properties": {
                  "valid": {
                    "type": "boolean"
                  },
                  "fileType": {
                    "type": "string"
                  },
                  "iatiVersion": {
                    "type": "string"
                  },
                  "summary": {
                    "type": "object",
                    "properties": {
                      "critical": {
                        "type": "integer"
                      },
                      "error": {
                        "type": "integer"
                      },
                      "warning": {
                        "type": "integer"
                      }
                    }
                  },
                  "errors": {
                    "type": "object",
                    "properties": {
                      "file": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "severity": {
                              "type": "string"
                            },
                            "category": {
                              "type": "string"
                            },
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "severity",
                            "category",
                            "message"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "name": "[concat(parameters('ApimServiceName'), '/iati-validator-v2/1622545438727')]",
      "type": "Microsoft.ApiManagement/service/apis/schemas",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'iati-validator-v2')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "This route allows the user to POST an IATI document to the Validator in the body of the request, and receive a JSON validation report in the response.\n",
        "request": {
          "description": "IATI document (activities or organisations)",
          "queryParameters": [],
          "headers": [
            {
              "name": "Content-Type",
              "type": "string",
              "required": false,
              "values": [
                "application/xml"
              ]
            },
            {
              "name": "Accept",
              "type": "string",
              "defaultValue": "application/json",
              "required": false,
              "values": [
                "application/json"
              ]
            }
          ],
          "representations": [
            {
              "contentType": "application/xml",
              "sample": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<iati-organisations version=\"2.02\" generated-datetime=\"2018-11-07T05:25:55+00:00\">\n    <iati-organisation last-updated-datetime=\"2018-11-07T05:25:55+00:00\" xml:lang=\"en\" default-currency=\"NPR\" xmlns:aidstream=\"http://example.org/aidstream/ns#\">\n        <organisation-identifier>NP-SWC-1234</organisation-identifier>\n        <name>\n            <narrative>Test Org Nepal</narrative>\n        </name>\n        <reporting-org type=\"24\" ref=\"NP-SWC-1234\">\n            <narrative>Test Org Nepal</narrative>\n        </reporting-org>\n    </iati-organisation>\n</iati-organisations>"
            }
          ]
        },
        "responses": [
          {
            "statusCode": 400,
            "description": "The body is either not present or is malformed.",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "{\n    \"error\": \"No body\"\n}",
                "schemaId": "1622545438727",
                "typeName": "No Body Error"
              },
              {
                "contentType": "application/json",
                "sample": "{\n  \"error\": \"string\"\n}",
                "schemaId": "1622545438727",
                "typeName": "Malformed Body Error"
              },
              {
                "contentType": "application/json",
                "sample": "{\n  \"valid\": false,\n  \"fileType\": \"string\",\n  \"iatiVersion\": \"string\",\n  \"summary\": {\n    \"critical\": 0,\n    \"error\": 0,\n    \"warning\": 0\n  },\n  \"errors\": {\n    \"file\": [\n      {\n        \"id\": \"string\",\n        \"severity\": \"string\",\n        \"category\": \"string\",\n        \"message\": \"string\"\n      }\n    ]\n  }\n}",
                "schemaId": "1622545438727",
                "typeName": "Invalid XML Error"
              }
            ]
          },
          {
            "statusCode": 422,
            "description": "Content of the body can be interpreted by the application but doesn't make sense for one of the following reasons.\n- Not recognisable as IATI\n- Not a supported version of IATI\n- Schema Errors",
            "headers": [],
            "representations": [
              {
                "contentType": "application/json",
                "sample": "{\n  \"valid\": false,\n  \"fileType\": \"string\",\n  \"iatiVersion\": \"string\",\n  \"summary\": {\n    \"critical\": 0,\n    \"error\": 0,\n    \"warning\": 0\n  },\n  \"errors\": {\n    \"file\": [\n      {\n        \"id\": \"string\",\n        \"severity\": \"string\",\n        \"category\": \"string\",\n        \"message\": \"string\"\n      }\n    ]\n  }\n}",
                "schemaId": "1622545438727",
                "typeName": "Valid XML but Not IATI"
              },
              {
                "contentType": "application/json",
                "sample": "{\n  \"valid\": false,\n  \"fileType\": \"string\",\n  \"iatiVersion\": \"string\",\n  \"summary\": {\n    \"critical\": 0,\n    \"error\": 0,\n    \"warning\": 0\n  },\n  \"errors\": {\n    \"file\": [\n      {\n        \"id\": \"string\",\n        \"severity\": \"string\",\n        \"category\": \"string\",\n        \"message\": \"string\"\n      }\n    ]\n  }\n}",
                "schemaId": "1622545438727",
                "typeName": "Unsupported IATI Version"
              },
              {
                "contentType": "application/json",
                "sample": "{\n  \"valid\": false,\n  \"fileType\": \"string\",\n  \"iatiVersion\": \"string\",\n  \"summary\": {\n    \"critical\": 0,\n    \"error\": 0,\n    \"warning\": 0\n  },\n  \"errors\": {\n    \"file\": [\n      {\n        \"id\": \"string\",\n        \"category\": \"string\",\n        \"message\": \"string\",\n        \"domain\": 0,\n        \"code\": 0,\n        \"level\": 0,\n        \"column\": 0,\n        \"line\": 0,\n        \"str1\": \"string\"\n      }\n    ]\n  }\n}",
                "schemaId": "1622545438727",
                "typeName": "Schema Error"
              }
            ]
          },
          {
            "statusCode": 200,
            "description": "Full validation was able to be run on the IATI document. There may be validation errors with the document.",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "validate",
        "method": "POST",
        "urlTemplate": "/validate"
      },
      "name": "[concat(parameters('ApimServiceName'), '/iati-validator-v2/post-pub-validate-post')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'iati-validator-v2')]",
        "[resourceId('Microsoft.ApiManagement/service/apis/schemas', parameters('ApimServiceName'), 'iati-validator-v2', '1622545438727')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/iati-validator-v2-post-pub-validate-post-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/iati-validator-v2/post-pub-validate-post/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'iati-validator-v2', 'post-pub-validate-post')]"
      ]
    },
    {
      "name": "[concat(parameters('ApimServiceName'), '/api-preview-testing/iati-validator-v2')]",
      "type": "Microsoft.ApiManagement/service/products/apis",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'iati-validator-v2')]"
      ]
    },
    {
      "properties": {
        "description": "Passthrough to Solr API",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": false,
        "displayName": "SOLR Private",
        "serviceUrl": "[parameters('serviceUrl').solr]",
        "path": "solr",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/solr')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": []
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "GET Passthrough",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [
          {
            "statusCode": 200,
            "description": "null",
            "headers": [],
            "representations": []
          }
        ],
        "displayName": "GET Passthrough",
        "method": "GET",
        "urlTemplate": "/*"
      },
      "name": "[concat(parameters('ApimServiceName'), '/solr/get-passthrough')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'solr')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/solr-get-passthrough-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/solr/get-passthrough/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'solr', 'get-passthrough')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/solr-apiPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/solr/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'solr')]"
      ]
    },
    {
      "properties": {
        "description": "Get an existing validation report of a published IATI doc known to the IATI Registry by passing either the id, hash or URL of the document, as available from the Registry API.",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": false,
        "displayName": "Validator Services",
        "serviceUrl": "[parameters('serviceUrl').devfuncvalidatorservices]",
        "path": "validator-services",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/dev-func-validator-services')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": []
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "pub-get-report",
        "method": "GET",
        "urlTemplate": "/pub/validation/existing"
      },
      "name": "[concat(parameters('ApimServiceName'), '/dev-func-validator-services/get-pub-get-report')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'dev-func-validator-services')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/dev-func-validator-services-get-pub-get-report-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/dev-func-validator-services/get-pub-get-report/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'dev-func-validator-services', 'get-pub-get-report')]"
      ]
    },
    {
      "properties": {
        "displayName": "validator"
      },
      "name": "[concat(parameters('ApimServiceName'), '/dev-func-validator-services/validator')]",
      "type": "Microsoft.ApiManagement/service/apis/tags",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'dev-func-validator-services')]"
      ]
    },
    {
      "properties": {
        "description": "Import from \"dev-func-validator-services\" Function App",
        "authenticationSettings": {
          "subscriptionKeyRequired": false
        },
        "subscriptionKeyParameterNames": {
          "header": "Ocp-Apim-Subscription-Key",
          "query": "subscription-key"
        },
        "apiRevision": "1",
        "isCurrent": true,
        "subscriptionRequired": false,
        "displayName": "Validator Services Private",
        "serviceUrl": "[parameters('serviceUrl').validatorservicesprivate]",
        "path": "vs",
        "protocols": [
          "https"
        ]
      },
      "name": "[concat(parameters('ApimServiceName'), '/validator-services-private')]",
      "type": "Microsoft.ApiManagement/service/apis",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": []
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "pub-get-report",
        "method": "GET",
        "urlTemplate": "/pub/validation/existing"
      },
      "name": "[concat(parameters('ApimServiceName'), '/validator-services-private/get-pub-get-report')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'validator-services-private')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/validator-services-private-get-pub-get-report-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/validator-services-private/get-pub-get-report/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'validator-services-private', 'get-pub-get-report')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "pvt-get-publishers",
        "method": "GET",
        "urlTemplate": "/pvt/publishers"
      },
      "name": "[concat(parameters('ApimServiceName'), '/validator-services-private/get-pvt-get-publishers')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'validator-services-private')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/validator-services-private-get-pvt-get-publishers-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/validator-services-private/get-pvt-get-publishers/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'validator-services-private', 'get-pvt-get-publishers')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "type": "",
            "required": true,
            "values": []
          }
        ],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "pvt-get-publishers-documents",
        "method": "GET",
        "urlTemplate": "/pvt/publishers/{id}/documents"
      },
      "name": "[concat(parameters('ApimServiceName'), '/validator-services-private/get-pvt-get-publisher-documents')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'validator-services-private')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/validator-services-private-get-pvt-get-publisher-documents-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/validator-services-private/get-pvt-get-publisher-documents/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'validator-services-private', 'get-pvt-get-publisher-documents')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "type": "",
            "required": true,
            "values": []
          }
        ],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "pvt-get-single-document",
        "method": "GET",
        "urlTemplate": "/pvt/documents/{id}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/validator-services-private/get-pvt-get-single-document')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'validator-services-private')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/validator-services-private-get-pvt-get-single-document-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/validator-services-private/get-pvt-get-single-document/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'validator-services-private', 'get-pvt-get-single-document')]"
      ]
    },
    {
      "properties": {
        "templateParameters": [
          {
            "name": "id",
            "type": "",
            "required": true,
            "values": []
          }
        ],
        "description": "",
        "request": {
          "queryParameters": [],
          "headers": [],
          "representations": []
        },
        "responses": [],
        "displayName": "pvt-get-single-publisher",
        "method": "GET",
        "urlTemplate": "/pvt/publishers/{id}"
      },
      "name": "[concat(parameters('ApimServiceName'), '/validator-services-private/get-pvt-get-single-publisher')]",
      "type": "Microsoft.ApiManagement/service/apis/operations",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'validator-services-private')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/validator-services-private-get-pvt-get-single-publisher-operationPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/validator-services-private/get-pvt-get-single-publisher/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/operations/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('ApimServiceName'), 'validator-services-private', 'get-pvt-get-single-publisher')]"
      ]
    },
    {
      "properties": {
        "value": "[concat(parameters('PolicyXMLBaseUrl'), '/validator-services-private-apiPolicy.xml')]",
        "format": "rawxml-link"
      },
      "name": "[concat(parameters('ApimServiceName'), '/validator-services-private/policy')]",
      "type": "Microsoft.ApiManagement/service/apis/policies",
      "apiVersion": "2021-01-01-preview",
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service/apis', parameters('ApimServiceName'), 'validator-services-private')]"
      ]
    }
  ]
}