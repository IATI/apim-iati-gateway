name: Deploy_To_Dev_APIM_On_Push

on:
  push:
    branches:
      - develop 
    paths:
    - 'service/**'
    - '.github/workflows/apim-develop.yml'

jobs:
  validate-deploy-apim:
    runs-on: ubuntu-latest

    env:
      Environment: dev
      UrlEnvPrefix: dev-
      SubscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      resourceGroup: rg-apim-dev
      ApimServiceName: apim-iati-dev
      ApimGatewayHostname: dev-api.iatistandard.org
      ApimDevPortalHostname: dev-developer.iatistandard.org
      ApimSKU: Developer
      repoUrl: https://raw.githubusercontent.com/iati/apim-iati-gateway
      repoBranch: ${GITHUB_REF##*/}
      repoApimPath: service

    steps:
      - name: "Checkout GitHub Action"
        uses: actions/checkout@v2

      - name: "Login to Azure"
        uses: azure/login@v1.3.0
        with:
          creds: ${{ secrets.DEV_AZURE_CREDENTIALS }}

      # - name: "Validate ARM Template for Deployment"
      #   uses: azure/arm-deploy@v1
      #   with:
      #     subscriptionId: $${{ secrets.AZURE_SUBSCRIPTION_ID }}
      #     resourceGroupName: $${{ env.resourceGroup }}
      #     template: ./${{ env.repoApimPath }}/dev-iati-api-gateway-master.template.json
      #     parameters: ./${{ env.repoApimPath }}/dev-iati-api-gateway-parameters.json
      #     deploymentMode: Validate

          # ARM deployment tasks  
      - name: Deploy APIM Service and APIs
        working-directory: ./service
        env:
          LinkedTemplatesBaseUrl: ${{ env.repoUrl }}/${{ env.repoBranch }}/${{ env.repoApimPath }}
          PolicyXMLBaseUrl: ${{ env.repoUrl }}/${{ env.repoBranch }}/${{ env.repoApimPath }}/policies
          deploymentName: --name GH_dev_deployment_apim
          rg: --resource-group ${{ env.resourceGroup }}
          apiNamePrefix: dev-iati-api-gateway
        run: |
            az deployment group create ${{env.deploymentName}} \
              ${{env.rg}} \
              --template-file ./${{env.apiNamePrefix}}-master.template.json \
              --parameters ./${{env.apiNamePrefix}}-parameters.json \
              --parameters ApimServiceName=${{ env.ApimServiceName }} \
              --parameters LinkedTemplatesBaseUrl=${{ env.LinkedTemplatesBaseUrl }} \
              --parameters PolicyXMLBaseUrl=${{ env.PolicyXMLBaseUrl }} \
              --parameters Environment=${{ env.Environment }} \
              --parameters UrlEnvPrefix=${{ env.UrlEnvPrefix }} \
              --parameters SubscriptionId=${{ env.SubscriptionId }} \
              --parameters ApimSKU=${{ env.ApimSKU }} \
              --parameters ApimGatewayHostname=${{ env.ApimGatewayHostname }} \
              --parameters ApimDevPortalHostname=${{ env.ApimDevPortalHostname }} 

      - name: Deploy APIs
        working-directory: ./service
        env:
          LinkedTemplatesBaseUrl: ${{ env.repoUrl }}/${{ env.repoBranch }}/${{ env.repoApimPath }}
          PolicyXMLBaseUrl: ${{ env.repoUrl }}/${{ env.repoBranch }}/${{ env.repoApimPath }}
          deploymentName: --name GH_dev_deployment_api
          rg: --resource-group ${{ env.resourceGroup }}
          apiNamePrefix: dev-iati-api-gateway
        run: |
          echo $apiNamePrefix
          for f in *; do
            if [[ ! -n "policies" && -d ${f} && ! -L ${f} ]]; then
              echo "Deploying API: $f"
              az deployment group create $deploymentName \
               $rg \
               --template-file ./$f/$apiNamePrefix-master.template.json \
               --parameters ./$f/$apiNamePrefix-parameters.json \
               --parameters ApimServiceName=${{ env.ApimServiceName }} \
               --parameters LinkedTemplatesBaseUrl=${{ env.LinkedTemplatesBaseUrl }}/$f \
               --parameters Environment=${{ env.Environment }} \
               --parameters UrlEnvPrefix=${{ env.UrlEnvPrefix }}

            fi
          done
